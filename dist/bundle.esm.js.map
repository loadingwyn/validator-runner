{"version":3,"file":"bundle.esm.js","sources":["../src/index.js"],"sourcesContent":["export default class Validator {\n  constructor(schema, options = { first: true, concurrent: false }) {\n    this.lastValidator = {};\n    this.schema = schema;\n    this.options = options;\n  }\n\n  validate(target, rules, options = {}, ...other) {\n    let errors = [];\n    let promiseQueue;\n    if (!rules || rules.length < 1) {\n      return Promise.resolve({\n        value: target,\n      });\n    }\n    if (!Array.isArray(rules)) {\n      rules = [rules];\n    }\n    if (options.concurrent) {\n      promiseQueue = Promise.all(\n        rules.map(rule => {\n          return this.transformToPromise(rule, target, errors, ...other).then(\n            value => value,\n            options.first ? value => value : null,\n          );\n        }),\n      );\n    } else {\n      promiseQueue = rules.reduce((queue, rule) => {\n        return queue.then(\n          () => this.transformToPromise(rule, target, errors, ...other),\n          !options.first\n            ? () => this.transformToPromise(rule, target, errors, ...other)\n            : null,\n        );\n      }, Promise.resolve());\n    }\n    return promiseQueue;\n  }\n\n  validateItem(source, fieldName, callback, ...other) {\n    let rules = this.schema[fieldName];\n    let targets = source[fieldName];\n    if (rules && rules.rules) {\n      rules = rules.rules;\n    }\n    if (rules && rules.withFields) {\n      const fields = Array.isArray(rules.withFields)\n        ? rules.withFields\n        : [rules.withFields];\n      targets = [fieldName, ...fields].map(name => source[name]);\n    }\n    const validation = this.validate(targets, rules, this.options, ...other);\n    this.lastValidator[fieldName] = validation;\n    return validation.then(\n      value => {\n        if (callback && this.lastValidator[fieldName] === validation) {\n          this.lastValidator[fieldName] = null;\n          callback(null, value.target);\n        }\n        return value;\n      },\n      value => {\n        if (callback && this.lastValidator[fieldName] === validation) {\n          this.lastValidator[fieldName] = null;\n          callback(value.errors, value.target);\n        }\n        return value;\n      },\n    );\n  }\n\n  // validateAll(source, callback, options = {}) {\n  //   let hasError = false;\n  //   const errors = {};\n  //   const promises = [];\n  //   (options.specificField || Object.keys(this.schema)).forEach(name => {\n  //     promises.push(\n  //       this.validateItem(source, name, fieldError => {\n  //         errors[name] = fieldError;\n  //         options.fieldCallback && options.fieldCallback(name, fieldError);\n  //       }),\n  //     );\n  //   });\n  //   return Promise.all(\n  //     promises.map(p =>\n  //       p.catch(v => {\n  //         hasError = true;\n  //         return v;\n  //       }),\n  //     ),\n  //   ).then(() => {\n  //     callback(errors, !hasError);\n  //     return hasError ? null : errors;\n  //   });\n  // }\n\n  messageHandler(result, message, target, promiseValue, ...other) {\n    if (typeof message === 'function') {\n      result.push(\n        `${message(target, promiseValue, ...other) || 'Error!'}`.trim(),\n      );\n    } else {\n      result.push(`${message != null ? message : 'Error!'}`.trim());\n    }\n    return result;\n  }\n\n  cancelItem(name) {\n    this.lastValidator[name] = null;\n  }\n\n  cancelAll() {\n    this.lastValidator = {};\n  }\n\n  transformToPromise = (rule, target, errors, ...other) => {\n    if (typeof rule.validator !== 'function') {\n      throw 'invalid validator';\n    }\n    let ruleReturn = rule.validator(target, ...other);\n    if (!ruleReturn || !ruleReturn.then || !ruleReturn.catch) {\n      ruleReturn = ruleReturn\n        ? Promise.resolve(ruleReturn)\n        : Promise.reject(ruleReturn);\n    }\n    const data = {\n      errors,\n      target,\n    };\n    return ruleReturn.then(\n      promiseValue => Object.assign(data, { promiseValue }),\n      promiseValue => {\n        data.errors = this.messageHandler(\n          errors,\n          rule.message,\n          target,\n          promiseValue,\n          ...other,\n        );\n        return Promise.reject(Object.assign(data, { promiseValue }));\n      },\n    );\n  };\n\n  setSchema(schema) {\n    this.schema = schema;\n  }\n\n  setOptions(options) {\n    this.options = options;\n  }\n}\n"],"names":["Validator","schema","options","transformToPromise","rule","target","errors","other","validator","ruleReturn","then","catch","Promise","resolve","reject","data","Object","assign","_this","messageHandler","message","promiseValue","lastValidator","rules","length","Array","isArray","concurrent","all","map","_this2","value","first","reduce","queue","source","fieldName","callback","this","targets","withFields","fields","name","validation","validate","_this3","result","push","trim"],"mappings":"21BAAqBA,gCACPC,cAAQC,iEAAmB,cAAkB,gCAmHzDC,mBAAqB,SAACC,EAAMC,EAAQC,8BAAWC,0DACf,mBAAnBH,EAAKI,eACR,wBAEJC,EAAaL,EAAKI,mBAAUH,UAAWE,IACtCE,GAAeA,EAAWC,MAASD,EAAWE,UACpCF,EACTG,QAAQC,QAAQJ,GAChBG,QAAQE,OAAOL,QAEfM,6BAICN,EAAWC,KAChB,mBAAgBM,OAAOC,OAAOF,qBAC9B,qBACOT,OAASY,EAAKC,wBACjBb,EACAF,EAAKgB,QACLf,EACAgB,UACGd,IAEEK,QAAQE,OAAOE,OAAOC,OAAOF,6BA1InCO,sBACArB,OAASA,OACTC,QAAUA,wDAGRG,EAAQkB,kBAAOrB,+EAAiBK,2DACnCD,YAECiB,GAASA,EAAMC,OAAS,EACpBZ,QAAQC,eACNR,KAGNoB,MAAMC,QAAQH,QACRA,IAEPrB,EAAQyB,WACKf,QAAQgB,IACrBL,EAAMM,IAAI,mBACDC,EAAK3B,4BAAmBC,EAAMC,EAAQC,UAAWC,IAAOG,KAC7D,mBAASqB,GACT7B,EAAQ8B,MAAQ,mBAASD,GAAQ,SAKxBR,EAAMU,OAAO,SAACC,EAAO9B,UAC3B8B,EAAMxB,KACX,kBAAMoB,EAAK3B,4BAAmBC,EAAMC,EAAQC,UAAWC,KACtDL,EAAQ8B,MAEL,KADA,kBAAMF,EAAK3B,4BAAmBC,EAAMC,EAAQC,UAAWC,OAG5DK,QAAQC,iDAKFsB,EAAQC,EAAWC,cAC1Bd,EAAQe,KAAKrC,OAAOmC,GACpBG,EAAUJ,EAAOC,MACjBb,GAASA,EAAMA,UACTA,EAAMA,OAEZA,GAASA,EAAMiB,WAAY,KACvBC,EAAShB,MAAMC,QAAQH,EAAMiB,YAC/BjB,EAAMiB,YACLjB,EAAMiB,eACAJ,6BAAcK,IAAQZ,IAAI,mBAAQM,EAAOO,gCAVXnC,2DAYrCoC,EAAaL,KAAKM,qBAASL,EAAShB,EAAOe,KAAKpC,gBAAYK,gBAC7De,cAAcc,GAAaO,EACzBA,EAAWjC,KAChB,mBACM2B,GAAYQ,EAAKvB,cAAcc,KAAeO,MAC3CrB,cAAcc,GAAa,OACvB,KAAML,EAAM1B,SAEhB0B,GAET,mBACMM,GAAYQ,EAAKvB,cAAcc,KAAeO,MAC3CrB,cAAcc,GAAa,OACvBL,EAAMzB,OAAQyB,EAAM1B,SAExB0B,2CA8BEe,EAAQ1B,EAASf,EAAQgB,MACf,mBAAZD,EAAwB,4BADoBb,yDAE9CwC,KACL,UAAG3B,gBAAQf,EAAQgB,UAAiBd,KAAU,UAAWyC,eAGpDD,KAAK,UAAc,MAAX3B,EAAkBA,EAAU,UAAW4B,eAEjDF,qCAGEJ,QACJpB,cAAcoB,GAAQ,8CAItBpB,mDAgCGrB,QACHA,OAASA,qCAGLC,QACJA,QAAUA"}